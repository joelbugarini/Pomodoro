<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Pomodoro.PomodoroWindow"
        Title="Pomodoro" Height="460" MinHeight="260px" Width="600" MinWidth="350px" WindowStyle="None" 
        Background="Transparent" AllowsTransparency="True" ResizeMode="CanResizeWithGrip" Icon="Pomodoro.ico">
    <Window.Resources>
        <Style TargetType="{x:Type ResizeGrip}">
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ResizeGrip}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
        </Style>
        <Style x:Key="ButtonNext" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="50">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.4">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFEAEAEA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipsemove">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC7C7C7"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE87D7D"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD65D5D"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD65D5D"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="50" Width="50" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse x:Name="ellipse1" Height="50" Width="50" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0.695"/>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="ellipse" Fill="#FFEAEAEA" Height="45" Width="45" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Ellipse x:Name="ellipsemove" Fill="#FFC1C1C1" Height="5" Width="5" Margin="2.5,3.5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Grid Margin="2,0,0,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center" Height="19.592" Width="20.612">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path x:Name="path" Stretch="Fill" Fill="#FFFD3D3D" Data="F1 M 543.274,77.4845L 610.244,125.254C 612.849,127.112 612.849,130.124 610.244,131.982L 543.274,179.751C 540.685,181.598 533.889,181.11 533.889,173.721L 533.889,82.7874C 533.889,76.7111 539.688,75.3281 543.274,77.4845 Z " Margin="0,0,7,0" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="Auto"/>
                                    <Path x:Name="path1" Stretch="Fill" Fill="#FFFD3D3D" Data="F1 M 543.274,77.4845L 610.244,125.254C 612.849,127.112 612.849,130.124 610.244,131.982L 543.274,179.751C 540.685,181.598 533.889,181.11 533.889,173.721L 533.889,82.7874C 533.889,76.7111 539.688,75.3281 543.274,77.4845 Z " Margin="7,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="Auto"/>
                                </Grid>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrevious" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Top" Width="Auto">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.4">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFEAEAEA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipsemove">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC7C7C7"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE87D7D"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD65D5D"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD65D5D"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="50" Width="50">
                                <Ellipse x:Name="ellipse1" Height="50" Width="50" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0.695"/>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="ellipse" Fill="#FFEAEAEA" Height="45" Width="45" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Ellipse x:Name="ellipsemove" Fill="#FFC1C1C1" Height="5" Width="5" Margin="2.5,3.5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Grid Margin="0,0,3,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center" Height="19.592" Width="20.612">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path x:Name="path" Stretch="Fill" Fill="#FFFD3D3D" Data="F1 M 543.274,77.4845L 610.244,125.254C 612.849,127.112 612.849,130.124 610.244,131.982L 543.274,179.751C 540.685,181.598 533.889,181.11 533.889,173.721L 533.889,82.7874C 533.889,76.7111 539.688,75.3281 543.274,77.4845 Z " Margin="0,0,7,0" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="Auto"/>
                                    <Path x:Name="path1" Stretch="Fill" Fill="#FFFD3D3D" Data="F1 M 543.274,77.4845L 610.244,125.254C 612.849,127.112 612.849,130.124 610.244,131.982L 543.274,179.751C 540.685,181.598 533.889,181.11 533.889,173.721L 533.889,82.7874C 533.889,76.7111 539.688,75.3281 543.274,77.4845 Z " Margin="7,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="Auto"/>
                                </Grid>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPause" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Top" Width="70">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.4">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFEAEAEA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="65"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipsemove">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="65"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipsemove">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="65"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC7C7C7"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="ellipse1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE87D7D"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="70" Width="70">
                                <Ellipse x:Name="ellipse1" Height="70" Width="70" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0.695"/>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="ellipse" Fill="#FFEAEAEA" Height="65" Width="65" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Ellipse x:Name="ellipsemove" Fill="#FFC1C1C1" Height="0" Width="0" Margin="2.5,3.5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Rectangle Fill="#FFFD3D3D" HorizontalAlignment="Center" Height="28" Margin="15,0,0,0" VerticalAlignment="Center" Width="7.166"/>
                                <Rectangle Fill="#FFFD3D3D" HorizontalAlignment="Center" Height="28" Margin="0,0,15,0" VerticalAlignment="Center" Width="7.166"/>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonLoadTasksStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Center" Width="Auto">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.4">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.4" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipse">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBDBDBD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBDBDBD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle2">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBDBDBD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle3">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBDBDBD"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFC3C3C3"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:1"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="30" Width="30">
                                <Ellipse x:Name="ellipse" Fill="#00EAEAEA" HorizontalAlignment="Stretch" Height="30" Margin="0" VerticalAlignment="Stretch" Width="30" Panel.ZIndex="-7"/>
                                <StackPanel Margin="0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Height="Auto" Width="18" HorizontalAlignment="Center" d:LayoutOverrides="Width" Grid.RowSpan="2">

                                    <Rectangle x:Name="rectangle" Fill="#FFEAEAEA" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle Fill="{x:Null}" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle x:Name="rectangle1" Fill="#FFEAEAEA" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle Fill="{x:Null}" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle x:Name="rectangle2" Fill="#FFEAEAEA" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle Fill="{x:Null}" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                    <Rectangle x:Name="rectangle3" Fill="#FFEAEAEA" Height="2" Margin="0" VerticalAlignment="Bottom"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid x:Name="Root" Background="#FFFD3D3D">
        <Grid x:Name="ContainerWin" Margin="0" Height="50" VerticalAlignment="Top">
            <Button x:Name="ButonWindow" MouseDoubleClick="ButonWindow_MouseDoubleClick" >
                <Button.Template>
                    <ControlTemplate>
                        <Rectangle x:Name="Dragable" Fill="#FFFD3D3D" Margin="0,0,80,0" Height="40" VerticalAlignment="Top" MouseLeftButtonDown="Dragable_MouseLeftButtonDown" />
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <StackPanel x:Name="WindowControl" Margin="0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Button x:Name="ButtonMinimize" Content="Button" HorizontalAlignment="Right" VerticalAlignment="Top" Width="40" Template="{DynamicResource ButtonMinimize}" Height="40" Click="ButtonMinimize_Click"/>
                <Button x:Name="ButtonMaximize" Content="Button" HorizontalAlignment="Right" VerticalAlignment="Top" Width="40" Template="{DynamicResource ButtonMaxim}" Height="40" Click="ButtonMaximize_Click" />

                <Button x:Name="ButtonClose" 
                        Content="Button" HorizontalAlignment="Right" 
                        VerticalAlignment="Top" Width="40" Template="{DynamicResource ButtonClose}" 
                        Height="40" Click="ButtonClose_Click"/>
            </StackPanel>
        </Grid>
        <Grid  UseLayoutRounding="False">            
            <StackPanel x:Name="Container" Margin="0" VerticalAlignment="Center" >
                <Grid Margin="0" Height="90" VerticalAlignment="Top">
                    <Label x:Name="TimerMinutes" Content="25" HorizontalAlignment="Center" Margin="0,0,120,0" VerticalAlignment="Top" Foreground="#FFEAEAEA" FontSize="69.333" FontFamily="/Pomodoro;component/Fonts/#Poiret One"/>
                    <Label x:Name="TimerSeconds" Content="00" HorizontalAlignment="Center" Margin="120,0,0,0" VerticalAlignment="Top" FontFamily="/Pomodoro;component/Fonts/#Poiret One" Foreground="#FFEAEAEA" FontSize="69.333"/>
                    <Label x:Name="separator" Content=":" HorizontalAlignment="Center" Margin="129.283,-15.5,144.283,15.5" VerticalAlignment="Center" FontFamily="/Pomodoro;component/Fonts/#Poiret One" Foreground="#FFEAEAEA" FontSize="69.333"/>
                </Grid>
                <StackPanel x:Name="Control" Margin="32.148,40.56,32.147,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                    <Button x:Name="ButtonPrevious" Content="Button" HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Style="{DynamicResource ButtonPrevious}" Height="50" Click="ButtonPrevious_Click" IsEnabled="False"/>
                    <Grid Height="70" Width="70">
                        <Button x:Name="ButtonPlay" Content="" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Style="{DynamicResource ButtonPlay}" Height="70" Click="ButtonPlay_Click"/>
                        <Button x:Name="ButtonPause" Content="" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Style="{DynamicResource ButtonPause}" Height="70" Click="ButtonPause_Click" Visibility="Hidden"/>
                    </Grid>
                    <Button x:Name="ButtonNext" Content="Button" HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Style="{DynamicResource ButtonNext}" Height="50" Click="ButtonNext_Click" IsEnabled="False"/>
                </StackPanel>
                
            </StackPanel>
        </Grid>
        

        <Grid x:Name="ContainerGrip" HorizontalAlignment="Right" Height="20" VerticalAlignment="Bottom" Width="20">
            <Viewbox Margin="0" Width="15" Height="20">
                <Canvas Width="51.5" Height="51.5" SnapsToDevicePixels="True">
                    <Path Width="11.5" Height="11.5" Canvas.Left="-9.53674e-007" Canvas.Top="39.9999" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 5.75,39.9999C 8.92567,39.9999 11.5,42.5743 11.5,45.7499C 11.5,48.9256 8.92564,51.4999 5.75,51.4999C 2.57436,51.4999 -9.53674e-007,48.9256 -9.53674e-007,45.7499C -9.53674e-007,42.5743 2.57432,39.9999 5.75,39.9999 Z " SnapsToDevicePixels="False"/>
                    <Path Width="11.5" Height="11.5" Canvas.Left="40" Canvas.Top="39.9999" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 45.75,39.9999C 48.9257,39.9999 51.5,42.5743 51.5,45.7499C 51.5,48.9256 48.9256,51.4999 45.75,51.4999C 42.5744,51.4999 40,48.9256 40,45.7499C 40,42.5743 42.5743,39.9999 45.75,39.9999 Z " SnapsToDevicePixels="False"/>
                    <Path Width="11.5" Height="11.5" Canvas.Left="40" Canvas.Top="0" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 45.75,0C 48.9257,0 51.5,2.57434 51.5,5.75C 51.5,8.9256 48.9256,11.5 45.75,11.5C 42.5744,11.5 40,8.9256 40,5.75C 40,2.57434 42.5743,0 45.75,0 Z " SnapsToDevicePixels="False"/>
                    <Path Width="11.5" Height="11.5" Canvas.Left="40" Canvas.Top="20" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 45.75,20C 48.9257,20 51.5,22.5743 51.5,25.75C 51.5,28.9256 48.9256,31.5 45.75,31.5C 42.5744,31.5 40,28.9256 40,25.75C 40,22.5743 42.5743,20 45.75,20 Z " SnapsToDevicePixels="False"/>
                    <Path Width="11.5" Height="11.5" Canvas.Left="20" Canvas.Top="39.9999" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 25.75,39.9999C 28.9257,39.9999 31.5,42.5743 31.5,45.7499C 31.5,48.9256 28.9256,51.4999 25.75,51.4999C 22.5744,51.4999 20,48.9256 20,45.7499C 20,42.5743 22.5743,39.9999 25.75,39.9999 Z " SnapsToDevicePixels="False"/>
                    <Path Width="11.5" Height="11.5" Canvas.Left="20" Canvas.Top="19.9999" Stretch="Fill" Fill="#FFF1F1F1" Data="F1 M 25.75,19.9999C 28.9257,19.9999 31.5,22.5743 31.5,25.7499C 31.5,28.9256 28.9256,31.4999 25.75,31.4999C 22.5744,31.4999 20,28.9256 20,25.7499C 20,22.5743 22.5743,19.9999 25.75,19.9999 Z " SnapsToDevicePixels="False"/>
                </Canvas>
            </Viewbox>
        </Grid>


    </Grid>
</Window>
